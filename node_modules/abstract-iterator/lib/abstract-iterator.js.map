{
  "version": 3,
  "file": "abstract-iterator.js",
  "sourceRoot": "../src/",
  "sources": [
    "abstract-iterator.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# Copyright (c) 2013 Rod Vagg, MIT License\n# Copyright (c) 2014 Riceball LEE, MIT License\nxtend                 = require(\"xtend\")\nminimatch             = require('minimatch')\nErrors                = require('abstract-error')\nconsts                = require('./consts')\ninherits              = require(\"inherits-ex\")\nisArray               = require(\"util-ex/lib/is/type/array\")\nisString              = require(\"util-ex/lib/is/type/string\")\nisFunction            = require(\"util-ex/lib/is/type/function\")\nisBuffer              = require(\"util-ex/lib/is/type/buffer\")\n\nAbstractError         = Errors.AbstractError\nNotImplementedError   = Errors.NotImplementedError\nNotFoundError         = Errors.NotFoundError\nInvalidArgumentError  = Errors.InvalidArgumentError\ncreateError           = Errors.createError\nAlreadyEndError       = createError(\"AlreadyEnd\", 0x53)\nAlreadyRunError       = createError(\"AlreadyRun\", 0x54)\n\nFILTER_INCLUDED = consts.FILTER_INCLUDED\nFILTER_EXCLUDED = consts.FILTER_EXCLUDED\nFILTER_STOPPED  = consts.FILTER_STOPPED\n\nErrors.AlreadyEndError  = AlreadyEndError\nErrors.AlreadyRunError  = AlreadyRunError\n\n\nmodule.exports = class AbstractIterator\n  @AlreadyEndError: AlreadyEndError\n  @AlreadyRunError: AlreadyRunError\n\n  constructor: (@db, options) ->\n    @_ended = false\n    @_nexting = false\n    @options = @initOptions(options)\n    options = @options\n\n    isKeysIterator = options and isArray options.range\n    if isKeysIterator\n      @_resultOfKeys = options.range\n      @_indexOfKeys = -1\n\n    return not isKeysIterator\n\n  initOptions: (options)->\n    options = xtend(options)\n    options.reverse = !!options.reverse\n\n    range = options.range\n    if isString(range)\n      range = range.trim()\n      if range.length >= 2\n        skipStart = if !options.reverse then range[0] is \"(\" else range[range.length-1] is \")\"\n        skipEnd   = if !options.reverse then range[range.length-1] is \")\" else range[0] is \"(\"\n        range     = range.substring(1, range.length-1)\n        range     = range.split(\",\").map (item)->\n          item = item.trim()\n          item = null if item is \"\"\n          return item\n        if !options.reverse\n          [start,end] = range\n          startOp = 'gt'\n          endOp = 'lt'\n        else\n          [end, start] = range\n          startOp = 'lt'\n          endOp = 'gt'\n        startOp = startOp + 'e' unless skipStart\n        endOp = endOp + 'e' unless skipEnd\n        options[startOp] = start\n        options[endOp] = end\n    options.keys = options.keys isnt false\n    options.values = options.values isnt false\n    options.limit = (if \"limit\" of options then options.limit else -1)\n    options.keyAsBuffer = options.keyAsBuffer is true\n    options.valueAsBuffer = options.valueAsBuffer is true\n    if options.next\n        if options.reverse isnt true\n          options.gt = options.next\n          options.gte= options.next\n        else\n          options.lt = options.next\n          options.lte= options.next\n    [\"start\", \"end\", \"gt\", \"gte\", \"lt\", \"lte\"].forEach (o) ->\n      if options[o] and isBuffer(options[o]) and options[o].length is 0\n        delete options[o]\n    if options.keys and isString(options.match) and options.match.length > 0\n      @match = (item)->\n        minimatch(item[0], options.match)\n    if isFunction(options.filter)\n      @filter = (item)->\n        options.filter item[0], item[1]\n    @encodeOptions options\n    options\n\n  encodeOptions: (options)->\n  decodeResult: (result)->\n  _next: (callback) ->\n    self = this\n    if @_nextSync\n      setImmediate ->\n        try\n          result = self._nextSync()\n          self._nexting = false\n        catch e\n          self._nexting = false\n          callback e\n          return\n        if result\n          callback null, result[0], result[1]\n        else\n          callback()\n        return\n    else\n      setImmediate ->\n        self._nexting = false\n        callback()\n        return\n\n\n  _end: (callback) ->\n    self = this\n    if @_endSync\n      setImmediate ->\n        try\n          result = self._endSync()\n          callback null, result\n        catch e\n          callback e\n    else\n      setImmediate ->\n        callback()\n\n\n  nextKeysSync: ->\n    @_nexting = true\n    if @_indexOfKeys is -1\n      @_resultOfKeys = @db._mGetSync @_resultOfKeys, @options\n      @_indexOfKeys++\n    result = @_indexOfKeys >= 0 and @_indexOfKeys < @_resultOfKeys.length\n    if result\n      result = @_resultOfKeys.slice(@_indexOfKeys, @_indexOfKeys+=2)\n      @decodeResult result\n      result =\n        key: result[0]\n        value: result[1]\n    @_nexting = false\n    return result\n\n  nextSync: ->\n    return throw new AlreadyEndError(\"cannot call next() after end()\") if @_ended\n    return throw new AlreadyRunError(\"cannot call next() before previous next() has completed\") if @_nexting\n    return false if @_filterStopped\n    if @_indexOfKeys?\n      return @nextKeysSync()\n    else if @_nextSync\n      @_nexting = true\n      result = @_nextSync()\n      if result isnt false\n        @decodeResult result\n        if @filter then switch @filter(result)\n          when FILTER_EXCLUDED\n            # skip this and read the next.\n            @_nexting = false\n            @nextSync()\n            return\n          when FILTER_STOPPED #halt\n            @_filterStopped = true\n        if @match and not @match(result)\n          @_nexting = false\n          @nextSync()\n          return\n        result =\n          key: result[0]\n          value: result[1]\n        @last = result[0]\n      @_nexting = false\n      return result\n    else\n      throw new NotImplementedError()\n\n  _endKeys: ->\n    delete @_resultOfKeys\n    @_indexOfKeys = -2\n    # @_ended = true\n\n  freeSync: ->\n    if @_indexOfKeys?\n      @_endKeys()\n    if @_endSync\n      @_ended = true\n      return @_endSync()\n    else\n      throw new NotImplementedError()\n  endSync: @::freeSync\n\n  nextKeys: (callback) ->\n    @_nexting = true\n    if @_indexOfKeys is -1\n      self = this\n      @db._mGet @_resultOfKeys, @options, (err, arr)->\n        self._nexting = false\n        return callback(err) if err\n        self._resultOfKeys = arr\n        self._indexOfKeys++\n        self.next(callback)\n      return @\n    else if @_indexOfKeys >= 0 and @_indexOfKeys < @_resultOfKeys.length\n      result = @_resultOfKeys.slice(@_indexOfKeys, @_indexOfKeys+=2)\n      @decodeResult result\n      @_nexting = false\n    else\n      result = false\n    @_nexting = false\n    if result is false\n      callback()\n    else\n      callback(undefined, result[0], result[1])\n    @\n\n  next: (callback) ->\n    throw new InvalidArgumentError(\"next() requires a callback argument\") unless typeof callback is \"function\"\n    return callback(new AlreadyEndError(\"cannot call next() after end()\")) if @_ended\n    return callback(new AlreadyRunError(\"cannot call next() before previous next() has completed\")) if @_nexting\n    return callback() if @_filterStopped\n    if @_indexOfKeys?\n      @nextKeys callback\n    else\n      @_nexting = true\n      self = this\n      @_next (err, key, value)->\n        self._nexting = false\n        if !err and (key? or value?)\n          result = [key, value]\n          self.decodeResult result\n          if self.filter then switch self.filter(result)\n            when FILTER_EXCLUDED\n              # skip this and read the next.\n              self.next callback\n              return\n            when FILTER_STOPPED #halt\n              self._filterStopped = true\n          if self.match and not self.match(result)\n            self.next callback\n            return\n          key = result[0]\n          value = result[1]\n          self.last = result[0]\n        callback.apply null, arguments\n    @\n\n  free: (callback) ->\n    throw new InvalidArgumentError(\"end() requires a callback argument\")  unless typeof callback is \"function\"\n    return callback(new AlreadyEndError(\"end() already called on iterator\"))  if @_ended\n    if @_indexOfKeys?\n      @_endKeys()\n    @_ended = true\n    @_end callback\n  end: @::free\n"
  ]
}